{"ast":null,"code":"var _jsxFileName = \"/Users/esra/Desktop/battleships_royale/src/Square.js\";\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { shipSelected } from './RunGame.js';\nimport { shipOrient } from './RunGame.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hitStatus: this.props.square.hitStatus,\n      index: this.props.index\n    };\n    this.handleClick = this.handleClick.bind(this);\n  } // this.props.index => the index within the grid array\n  // this.state.status => status of the square in the array\n  // \n\n\n  handleClick() {\n    if ( //checks if button pressed is inside the array given with ship selected and orientation(if button is not then ship will not go out of bounds if placed there, quic maffs)\n    shipSelected === 'ship2' && shipOrient === 'horizontal' && [3, 7, 11, 15].includes(this.props.index) || shipSelected === 'ship3' && shipOrient === 'horizontal' && [2, 3, 6, 7, 10, 11, 14, 15].includes(this.props.index) || shipSelected === 'ship4' && shipOrient === 'horizontal' && [1, 2, 3, 5, 6, 7, 9, 10, 11, 13, 14, 15].includes(this.props.index) || shipSelected === 'ship2' && shipOrient === 'vertical' && [12, 13, 14, 15].includes(this.props.index) || shipSelected === 'ship3' && shipOrient === 'vertical' && [8, 9, 10, 11, 12, 13, 14, 15].includes(this.props.index) || shipSelected === 'ship4' && shipOrient === 'vertical' && [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15].includes(this.props.index)) {\n      console.log(\"out of boundaries\");\n    } else if ( //slices the array with the boxes to check depending on ship selected and orientation, then checks elements for property shipStatus to not include ship (prevents ship overlap)\n    shipSelected === 'ship1' && shipOrient === 'horizontal' && this.props.gridArray.slice(this.props.index, this.props.index + 1).filter(square => square.shipStatus === 'ship').length > 0 || shipSelected === 'ship2' && shipOrient === 'horizontal' && this.props.gridArray.slice(this.props.index, this.props.index + 2).filter(square => square.shipStatus === 'ship').length > 0 || shipSelected === 'ship3' && shipOrient === 'horizontal' && this.props.gridArray.slice(this.props.index, this.props.index + 3).filter(square => square.shipStatus === 'ship').length > 0 || shipSelected === 'ship4' && shipOrient === 'horizontal' && this.props.gridArray.slice(this.props.index, this.props.index + 4).filter(square => square.shipStatus === 'ship').length > 0 || shipSelected === 'ship1' && shipOrient === 'vertical' && this.props.gridArray.slice(this.props.index, this.props.index + 1).filter(square => square.shipStatus === 'ship').length > 0 || shipSelected === 'ship2' && shipOrient === 'vertical' && (this.props.gridArray.slice(this.props.index, this.props.index + 1).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index + 4, this.props.index + 5).filter(square => square.shipStatus === 'ship').length > 0) || shipSelected === 'ship3' && shipOrient === 'vertical' && (this.props.gridArray.slice(this.props.index, this.props.index + 1).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index + 4, this.props.index + 5).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index + 8, this.props.index + 9).filter(square => square.shipStatus === 'ship').length > 0) || shipSelected === 'ship4' && shipOrient === 'vertical' && (this.props.gridArray.slice(this.props.index, this.props.index + 1).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index + 4, this.props.index + 5).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index + 8, this.props.index + 9).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index + 12, this.props.index + 13).filter(square => square.shipStatus === 'ship').length > 0)) {\n      console.log(\"overlaps another ship\");\n    } else {\n      //places horizontal ships\n      //if ship is size 2, the next .map iteration selects the square property as ship too\n      // ~so on for size 3 and 4 and their iterations respectively\n      if (shipOrient === 'horizontal') {\n        var newGridArray = this.props.gridArray.map((square, i) => {\n          if (this.props.index === i && (shipSelected === 'ship1' || shipSelected === 'ship2' || shipSelected === 'ship3' || shipSelected === 'ship4')) {\n            return { ...square,\n              shipStatus: 'ship'\n            };\n          } else if (this.props.index + 1 === i && (shipSelected === 'ship2' || shipSelected === 'ship3' || shipSelected === 'ship4')) {\n            return { ...square,\n              shipStatus: 'ship'\n            };\n          } else if (this.props.index + 2 === i && (shipSelected === 'ship3' || shipSelected === 'ship4')) {\n            return { ...square,\n              shipStatus: 'ship'\n            };\n          } else if (this.props.index + 3 === i && shipSelected === 'ship4') {\n            return { ...square,\n              shipStatus: 'ship'\n            };\n          } else {\n            return square;\n          }\n        });\n        this.props.setGridArray(newGridArray);\n      } //places vertical ships similar to horizontal, but instead of index +1, it goes down (index+4 since row is 4)\n\n\n      if (shipOrient === 'vertical') {\n        var newGridArray = this.props.gridArray.map((square, i) => {\n          if (this.props.index === i && (shipSelected === 'ship1' || shipSelected === 'ship2' || shipSelected === 'ship3' || shipSelected === 'ship4')) {\n            return { ...square,\n              shipStatus: 'ship'\n            };\n          } else if (this.props.index + 4 === i && (shipSelected === 'ship2' || shipSelected === 'ship3' || shipSelected === 'ship4')) {\n            return { ...square,\n              shipStatus: 'ship'\n            };\n          } else if (this.props.index + 8 === i && (shipSelected === 'ship3' || shipSelected === 'ship4')) {\n            return { ...square,\n              shipStatus: 'ship'\n            };\n          } else if (this.props.index + 12 === i && shipSelected === 'ship4') {\n            return { ...square,\n              shipStatus: 'ship'\n            };\n          } else {\n            return square;\n          }\n        });\n        this.props.setGridArray(newGridArray);\n      }\n    }\n  } // This handleClick can be used in the player2/3 board. On clicking the square, it would need to:\n  // Check to see if this square in the player's array has a ship, if so, change hitStatus to hit\n  // If it does NOT have a ship, change hitStatus to miss\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `player square ${this.props.square.shipStatus}`,\n      id: `play1_square_${this.props.index}`,\n      onClick: () => {\n        this.handleClick();\n      },\n      children: \" \"\n    }, `square_${this.props.index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["toHaveStyle","React","ReactDOM","shipSelected","shipOrient","Square","Component","constructor","props","state","hitStatus","square","index","handleClick","bind","includes","console","log","gridArray","slice","filter","shipStatus","length","newGridArray","map","i","setGridArray","render"],"sources":["/Users/esra/Desktop/battleships_royale/src/Square.js"],"sourcesContent":["import { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {shipSelected} from './RunGame.js';\nimport {shipOrient} from './RunGame.js';\n\nexport class Square extends React.Component {  \n  constructor(props) {\n    super(props);\n    this.state = {\n      hitStatus: this.props.square.hitStatus,\n      index: this.props.index\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  // this.props.index => the index within the grid array\n\n  // this.state.status => status of the square in the array\n\n  // \n  \n\n  handleClick () {\n\n    if (\n      //checks if button pressed is inside the array given with ship selected and orientation(if button is not then ship will not go out of bounds if placed there, quic maffs)\n        (shipSelected === 'ship2' && shipOrient === 'horizontal' && [3,7,11,15].includes(this.props.index)) ||\n        (shipSelected === 'ship3' && shipOrient === 'horizontal' && [2,3,6,7,10,11,14,15].includes(this.props.index)) ||\n        (shipSelected === 'ship4' && shipOrient === 'horizontal' && [1,2,3,5,6,7,9,10,11,13,14,15].includes(this.props.index)) ||\n        (shipSelected === 'ship2' && shipOrient === 'vertical' && [12,13,14,15].includes(this.props.index)) ||\n        (shipSelected === 'ship3' && shipOrient === 'vertical' && [8,9,10,11,12,13,14,15].includes(this.props.index)) ||\n        (shipSelected === 'ship4' && shipOrient === 'vertical' && [4,5,6,7,8,9,10,11,12,13,14,15].includes(this.props.index))\n        ){\n      console.log(\"out of boundaries\")\n    } else if (\n      //slices the array with the boxes to check depending on ship selected and orientation, then checks elements for property shipStatus to not include ship (prevents ship overlap)\n      (shipSelected === 'ship1' && shipOrient === 'horizontal' && this.props.gridArray.slice(this.props.index,this.props.index+1).filter(square => square.shipStatus === 'ship').length > 0) ||\n      (shipSelected === 'ship2' && shipOrient === 'horizontal' && this.props.gridArray.slice(this.props.index,this.props.index+2).filter(square => square.shipStatus === 'ship').length > 0) ||\n      (shipSelected === 'ship3' && shipOrient === 'horizontal' && this.props.gridArray.slice(this.props.index,this.props.index+3).filter(square => square.shipStatus === 'ship').length > 0) ||\n      (shipSelected === 'ship4' && shipOrient === 'horizontal' && this.props.gridArray.slice(this.props.index,this.props.index+4).filter(square => square.shipStatus === 'ship').length > 0) ||\n      (shipSelected === 'ship1' && shipOrient === 'vertical' && (this.props.gridArray.slice(this.props.index,this.props.index+1).filter(square => square.shipStatus === 'ship').length > 0)) ||\n      (shipSelected === 'ship2' && shipOrient === 'vertical' && (this.props.gridArray.slice(this.props.index,this.props.index+1).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index+4, this.props.index+5).filter(square => square.shipStatus === 'ship').length > 0)) || \n      (shipSelected === 'ship3' && shipOrient === 'vertical' && (this.props.gridArray.slice(this.props.index,this.props.index+1).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index+4, this.props.index+5).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index+8,this.props.index+9).filter(square => square.shipStatus === 'ship').length > 0)) ||\n      (shipSelected === 'ship4' && shipOrient === 'vertical' && (this.props.gridArray.slice(this.props.index,this.props.index+1).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index+4, this.props.index+5).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index+8,this.props.index+9).filter(square => square.shipStatus === 'ship').length > 0 || this.props.gridArray.slice(this.props.index+12,this.props.index+13).filter(square => square.shipStatus === 'ship').length > 0))\n      ){\n      console.log(\"overlaps another ship\")\n    } else {\n\n      //places horizontal ships\n      //if ship is size 2, the next .map iteration selects the square property as ship too\n      // ~so on for size 3 and 4 and their iterations respectively\n      if (shipOrient === 'horizontal'){\n        var newGridArray = this.props.gridArray.map((square, i) => {\n          if(this.props.index === i && (shipSelected === 'ship1'|| shipSelected === 'ship2' || shipSelected === 'ship3'|| shipSelected === 'ship4')){\n            return {\n              ...square,\n              shipStatus: 'ship',\n            };\n          } else if (this.props.index + 1 === i && (shipSelected === 'ship2' || shipSelected === 'ship3' || shipSelected === 'ship4')){\n            return {\n              ...square,\n              shipStatus: 'ship',};\n          } else if (this.props.index + 2 === i && (shipSelected === 'ship3' || shipSelected === 'ship4')){\n            return {\n              ...square,\n              shipStatus: 'ship',};\n          } else if (this.props.index + 3 === i && (shipSelected === 'ship4')){\n            return {\n              ...square,\n              shipStatus: 'ship',};\n          } else {\n            return square\n          }\n\n        })\n        this.props.setGridArray(newGridArray)\n      }\n\n      //places vertical ships similar to horizontal, but instead of index +1, it goes down (index+4 since row is 4)\n      if (shipOrient === 'vertical'){\n        var newGridArray = this.props.gridArray.map((square, i) => {\n          if(this.props.index === i && (shipSelected === 'ship1'|| shipSelected === 'ship2' || shipSelected === 'ship3'|| shipSelected === 'ship4')){\n            return {\n              ...square,\n              shipStatus: 'ship',\n            };\n          } else if (this.props.index + 4 === i && (shipSelected === 'ship2' || shipSelected === 'ship3' || shipSelected === 'ship4')){\n            return {\n              ...square,\n              shipStatus: 'ship',};\n          } else if (this.props.index + 8 === i && (shipSelected === 'ship3' || shipSelected === 'ship4')){\n            return {\n              ...square,\n              shipStatus: 'ship',};\n          } else if (this.props.index + 12 === i && (shipSelected === 'ship4')){\n            return {\n              ...square,\n              shipStatus: 'ship',};\n          } else {\n            return square\n          }\n\n        })\n        this.props.setGridArray(newGridArray)\n      }\n    }\n  }\n\n  // This handleClick can be used in the player2/3 board. On clicking the square, it would need to:\n  // Check to see if this square in the player's array has a ship, if so, change hitStatus to hit\n  // If it does NOT have a ship, change hitStatus to miss\n\n  render(){\n    return(\n      <div className={`player square ${this.props.square.shipStatus}`} id={`play1_square_${this.props.index}`} key={`square_${this.props.index}`} onClick={() => {this.handleClick()}}> </div>\n  )\n}}"],"mappings":"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"},"metadata":{},"sourceType":"module"}