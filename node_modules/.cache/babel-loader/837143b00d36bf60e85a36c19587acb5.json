{"ast":null,"code":"var _jsxFileName = \"/Users/esra/Desktop/battleships_royale/src/SquareOpponent.js\";\nimport { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class SquareOpponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hitStatus: this.props.square.hitStatus,\n      index: this.props.index\n    };\n    this.handleClick = this.handleClick.bind(this);\n  } // this.props.index => the index within the grid array\n  // this.state.status => status of the square in the array\n  // \n\n\n  handleClick() {\n    let newGridArray = this.props.gridArray.map((square, i) => {\n      if (this.props.index === i && this.props.square.shipStatus === 'ship') {\n        return { ...square,\n          hitStatus: 'hit'\n        };\n      } else if (this.props.index === i && this.props.square.shipStatus === '0') {\n        return { ...square,\n          hitStatus: 'miss'\n        };\n      } else {\n        return square;\n      }\n    });\n    this.props.setGridArray(newGridArray);\n  } // This handleClick can be used in the player2/3 board. On clicking the square, it would need to:\n  // Check to see if this square in the player's array has a ship, if so, change hitStatus to hit\n  // If it does NOT have a ship, change hitStatus to miss\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `opponent square ${this.props.square.hitStatus}`,\n      id: `play2_square_${this.props.index}`,\n      onClick: () => {\n        this.handleClick();\n      },\n      children: \" \"\n    }, `square_${this.props.index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"names":["toHaveStyle","React","ReactDOM","SquareOpponent","Component","constructor","props","state","hitStatus","square","index","handleClick","bind","newGridArray","gridArray","map","i","shipStatus","setGridArray","render"],"sources":["/Users/esra/Desktop/battleships_royale/src/SquareOpponent.js"],"sourcesContent":["import { toHaveStyle } from '@testing-library/jest-dom/dist/matchers';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nexport class SquareOpponent extends React.Component {  \n  constructor(props) {\n    super(props);\n    this.state = {\n      hitStatus: this.props.square.hitStatus,\n      index: this.props.index\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  // this.props.index => the index within the grid array\n\n  // this.state.status => status of the square in the array\n\n  // \n  \n\n  handleClick () {\n    let newGridArray = this.props.gridArray.map((square, i) => {\n      if(this.props.index === i && this.props.square.shipStatus === 'ship'){\n        return { ...square, hitStatus: 'hit'}\n      } else if (this.props.index === i && this.props.square.shipStatus === '0') {\n        return { ...square, hitStatus: 'miss'}\n      } else { return square }\n    })\n    this.props.setGridArray(newGridArray)\n  }\n\n  // This handleClick can be used in the player2/3 board. On clicking the square, it would need to:\n  // Check to see if this square in the player's array has a ship, if so, change hitStatus to hit\n  // If it does NOT have a ship, change hitStatus to miss\n\n  render(){\n    return(\n      <div className={`opponent square ${this.props.square.hitStatus}`} id={`play2_square_${this.props.index}`} key={`square_${this.props.index}`} onClick={() => {this.handleClick()}}> </div>\n  )\n}}"],"mappings":";AAAA,SAASA,WAAT,QAA4B,yCAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,OAAO,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA6C;EAClDC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,SAAS,EAAE,KAAKF,KAAL,CAAWG,MAAX,CAAkBD,SADlB;MAEXE,KAAK,EAAE,KAAKJ,KAAL,CAAWI;IAFP,CAAb;IAIA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;EACD,CARiD,CAUlD;EAEA;EAEA;;;EAGAD,WAAW,GAAI;IACb,IAAIE,YAAY,GAAG,KAAKP,KAAL,CAAWQ,SAAX,CAAqBC,GAArB,CAAyB,CAACN,MAAD,EAASO,CAAT,KAAe;MACzD,IAAG,KAAKV,KAAL,CAAWI,KAAX,KAAqBM,CAArB,IAA0B,KAAKV,KAAL,CAAWG,MAAX,CAAkBQ,UAAlB,KAAiC,MAA9D,EAAqE;QACnE,OAAO,EAAE,GAAGR,MAAL;UAAaD,SAAS,EAAE;QAAxB,CAAP;MACD,CAFD,MAEO,IAAI,KAAKF,KAAL,CAAWI,KAAX,KAAqBM,CAArB,IAA0B,KAAKV,KAAL,CAAWG,MAAX,CAAkBQ,UAAlB,KAAiC,GAA/D,EAAoE;QACzE,OAAO,EAAE,GAAGR,MAAL;UAAaD,SAAS,EAAE;QAAxB,CAAP;MACD,CAFM,MAEA;QAAE,OAAOC,MAAP;MAAe;IACzB,CANkB,CAAnB;IAOA,KAAKH,KAAL,CAAWY,YAAX,CAAwBL,YAAxB;EACD,CA1BiD,CA4BlD;EACA;EACA;;;EAEAM,MAAM,GAAE;IACN,oBACE;MAAK,SAAS,EAAG,mBAAkB,KAAKb,KAAL,CAAWG,MAAX,CAAkBD,SAAU,EAA/D;MAAkE,EAAE,EAAG,gBAAe,KAAKF,KAAL,CAAWI,KAAM,EAAvG;MAA6I,OAAO,EAAE,MAAM;QAAC,KAAKC,WAAL;MAAmB,CAAhL;MAAA;IAAA,GAAgH,UAAS,KAAKL,KAAL,CAAWI,KAAM,EAA1I;MAAA;MAAA;MAAA;IAAA,QADF;EAGH;;AApCmD"},"metadata":{},"sourceType":"module"}