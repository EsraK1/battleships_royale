{"ast":null,"code":"var _jsxFileName = \"/Users/esra/Desktop/battleships_royale/src/RunGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Square } from './Square';\nimport { SquareOpponent } from './SquareOpponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var shipSelected = true;\nexport var shipOrient = true;\nvar shipSelected = 'none';\nvar shipOrient = 'horizontal';\nexport function RunGame() {\n  _s();\n\n  const gridArraySetup = new Array(16).fill({\n    shipStatus: '0',\n    hitStatus: '-'\n  }); // Making an array to form the grid.\n  // shipStatus to store if a boat is saved in that location\n  // hitStatus to store if that location has been hit or not yet. \n\n  var [gridArray, setGridArray] = useState(gridArraySetup);\n  const player2GridArray = new Array(16).fill({\n    shipStatus: '0',\n    hitStatus: '-'\n  });\n  const player2WithShips = player2GridArray.map((square, index) => index === 4 || index === 5 || index === 6 ? { ...square,\n    shipStatus: 'ship'\n  } : square);\n  var [player2GridArray2, setGridArray2] = useState(player2WithShips);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ships\",\n      id: \"Ship1\",\n      onClick: () => {\n        SelectShip(1);\n      },\n      children: \" Ship1 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ships\",\n      onClick: () => {\n        SelectShip(2);\n      },\n      children: \" Ship2 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ships\",\n      onClick: () => {\n        SelectShip(3);\n      },\n      children: \" Ship3 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ships\",\n      onClick: () => {\n        SelectShip(4);\n      },\n      children: \" Ship4 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ships\",\n      onClick: () => {\n        SelectOrientation('horizontal');\n      },\n      children: \" Horizontal \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"ships\",\n      onClick: () => {\n        SelectOrientation('vertical');\n      },\n      children: \" Vertical \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player board\",\n      id: \"GameContainer\",\n      children: gridArray.map( // maps through the array and makes a square for each of the elements in the array.\n      (square, index) => /*#__PURE__*/_jsxDEV(Square, {\n        square: square,\n        index: index,\n        gridArray: gridArray,\n        setGridArray: setGridArray\n      }, `player1Board_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this) // these 'tags' of square and index pass into the 'props' within the Square class component\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Player 2's Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player2 board\",\n      id: \"GameContainer2\",\n      children: player2GridArray2.map((square, index) => /*#__PURE__*/_jsxDEV(SquareOpponent, {\n        square: square,\n        index: index,\n        gridArray: player2GridArray2,\n        setGridArray: setGridArray2\n      }, `player2Board_${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RunGame, \"0jrQmtJthkFfOKJF7c7XCT+e/Vw=\");\n\n_c = RunGame;\n\nfunction SelectShip(shiptype) {\n  if (shiptype === 1) {\n    shipSelected = 'ship1';\n  } else if (shiptype === 2) {\n    shipSelected = 'ship2';\n  } else if (shiptype === 3) {\n    shipSelected = 'ship3';\n  } else if (shiptype === 4) {\n    shipSelected = 'ship4';\n  }\n}\n\n_c2 = SelectShip;\n\nfunction SelectOrientation(shipOrientation) {\n  if (shipOrientation === 'horizontal') {\n    shipOrient = 'horizontal';\n  } else if (shipOrientation === 'vertical') {\n    shipOrient = 'vertical';\n  }\n}\n\n_c3 = SelectOrientation;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RunGame\");\n$RefreshReg$(_c2, \"SelectShip\");\n$RefreshReg$(_c3, \"SelectOrientation\");","map":{"version":3,"names":["React","useState","ReactDOM","Square","SquareOpponent","shipSelected","shipOrient","RunGame","gridArraySetup","Array","fill","shipStatus","hitStatus","gridArray","setGridArray","player2GridArray","player2WithShips","map","square","index","player2GridArray2","setGridArray2","SelectShip","SelectOrientation","shiptype","shipOrientation"],"sources":["/Users/esra/Desktop/battleships_royale/src/RunGame.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Square } from './Square';\nimport { SquareOpponent } from './SquareOpponent'\n\nexport var shipSelected = true;\nexport var shipOrient = true;\n\nvar shipSelected = 'none'\nvar shipOrient = 'horizontal'\n\nexport function RunGame() {\n  const gridArraySetup = new Array(16).fill({\n    shipStatus: '0',\n    hitStatus: '-'\n  }) // Making an array to form the grid.\n  // shipStatus to store if a boat is saved in that location\n  // hitStatus to store if that location has been hit or not yet. \n\n  var [gridArray, setGridArray] = useState(gridArraySetup)\n\n  const player2GridArray = new Array(16).fill({\n    shipStatus: '0',\n    hitStatus: '-'\n  })\n\n  const player2WithShips = player2GridArray.map((square, index)=>\n    index === 4 || index === 5 || index === 6 ? { ...square, shipStatus: 'ship' } : square\n);\n\n  \n\n  var [player2GridArray2, setGridArray2] = useState(player2WithShips)\n\n  return (\n    <div>\n    <button className=\"ships\" id=\"Ship1\" onClick={()=>{ SelectShip(1);}}> Ship1 </button>\n    <button className=\"ships\" onClick={()=>{ SelectShip(2);}}> Ship2 </button>\n    <button className=\"ships\" onClick={()=>{ SelectShip(3);}}> Ship3 </button>\n    <button className=\"ships\" onClick={()=>{ SelectShip(4);}}> Ship4 </button>\n    <button className=\"ships\" onClick={()=>{ SelectOrientation('horizontal');}}> Horizontal </button>\n    <button className=\"ships\" onClick={()=>{ SelectOrientation('vertical');}}> Vertical </button>\n    <h1>Your Board</h1>\n    <div className=\"player board\" id=\"GameContainer\">\n      {gridArray.map( // maps through the array and makes a square for each of the elements in the array.\n        (square, index) => (<Square square={square} key={`player1Board_${index}`} index={index} gridArray={gridArray} setGridArray={setGridArray}/>) // these 'tags' of square and index pass into the 'props' within the Square class component\n        )}\n    </div>\n\n    <h1>Player 2's Board</h1>\n    <div className=\"player2 board\" id=\"GameContainer2\">\n      {player2GridArray2.map(\n        (square, index) => (<SquareOpponent square={square} key={`player2Board_${index}`} index={index} gridArray={player2GridArray2} setGridArray={setGridArray2}/>)\n        )}\n    </div>\n\n\n    </div>\n  );\n}\n\nfunction SelectShip(shiptype){\n\n  if (shiptype === 1){\n\n  shipSelected = 'ship1';\n\n  } else if (shiptype === 2){\n\n    shipSelected = 'ship2';\n\n  } else if (shiptype === 3){\n\n    shipSelected = 'ship3';\n\n  } else if (shiptype === 4){\n\n    shipSelected = 'ship4';\n\n  }\n\n}\n\nfunction SelectOrientation(shipOrientation){\n  if (shipOrientation === 'horizontal') {\n    shipOrient = 'horizontal'\n  } else if (shipOrientation === 'vertical'){\n    shipOrient = 'vertical'\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}